import"angular2/src/facade/lang";import"angular2/src/facade/collection";import e from"./base_wrapped_exception.js";import"angular2/src/facade/base_wrapped_exception";import t from"./exception_handler.js";"use strict";var r={};var n=r&&r.__extends||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);function __(){this.constructor=e}e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)};var p=e;var o=t;var i=t;r.ExceptionHandler=i.ExceptionHandler;var a=function(e){n(BaseException,e);function BaseException(t){void 0===t&&(t="--");e.call(this,t);this.message=t;this.stack=new Error(t).stack}BaseException.prototype.toString=function(){return this.message};return BaseException}(Error);r.BaseException=a;var c=function(e){n(WrappedException,e);function WrappedException(t,r,n,p){e.call(this,t);this._wrapperMessage=t;this._originalException=r;this._originalStack=n;this._context=p;this._wrapperStack=new Error(t).stack}Object.defineProperty(WrappedException.prototype,"wrapperMessage",{get:function(){return this._wrapperMessage},enumerable:true,configurable:true});Object.defineProperty(WrappedException.prototype,"wrapperStack",{get:function(){return this._wrapperStack},enumerable:true,configurable:true});Object.defineProperty(WrappedException.prototype,"originalException",{get:function(){return this._originalException},enumerable:true,configurable:true});Object.defineProperty(WrappedException.prototype,"originalStack",{get:function(){return this._originalStack},enumerable:true,configurable:true});Object.defineProperty(WrappedException.prototype,"context",{get:function(){return this._context},enumerable:true,configurable:true});Object.defineProperty(WrappedException.prototype,"message",{get:function(){return o.ExceptionHandler.exceptionToString(this)},enumerable:true,configurable:true});WrappedException.prototype.toString=function(){return this.message};return WrappedException}(p.BaseWrappedException);r.WrappedException=c;function makeTypeError(e){return new TypeError(e)}r.makeTypeError=makeTypeError;function unimplemented(){throw new a("unimplemented")}r.unimplemented=unimplemented;const u=r.ExceptionHandler;const s=r.BaseException,l=r.WrappedException,d=r.makeTypeError,x=r.unimplemented;export default r;export{s as BaseException,u as ExceptionHandler,l as WrappedException,d as makeTypeError,x as unimplemented};

