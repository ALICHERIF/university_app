var r={};var e=function(){function PromiseCompleter(){var r=this;this.promise=new Promise((function(e,o){r.resolve=e;r.reject=o}))}return PromiseCompleter}();r.PromiseCompleter=e;var o=function(){function PromiseWrapper(){}PromiseWrapper.resolve=function(r){return Promise.resolve(r)};PromiseWrapper.reject=function(r,e){return Promise.reject(r)};PromiseWrapper.catchError=function(r,e){return r.catch(e)};PromiseWrapper.all=function(r){return 0==r.length?Promise.resolve([]):Promise.all(r)};PromiseWrapper.then=function(r,e,o){return r.then(e,o)};PromiseWrapper.wrap=function(r){return new Promise((function(e,o){try{e(r())}catch(r){o(r)}}))};PromiseWrapper.scheduleMicrotask=function(r){PromiseWrapper.then(PromiseWrapper.resolve(null),r,(function(r){}))};PromiseWrapper.isPromise=function(r){return r instanceof Promise};PromiseWrapper.completer=function(){return new e};return PromiseWrapper}();r.PromiseWrapper=o;const n=r.PromiseCompleter,i=r.PromiseWrapper;export default r;export{n as PromiseCompleter,i as PromiseWrapper};

