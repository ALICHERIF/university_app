import r from"angular2/src/facade/lang";"use strict";var e={};var t=r;e.Map=t.global.Map;e.Set=t.global.Set;var n=function(){try{if(1===new e.Map([[1,2]]).size)return function createMapFromPairs(r){return new e.Map(r)}}catch(r){}return function createMapAndPopulateFromPairs(r){var t=new e.Map;for(var n=0;n<r.length;n++){var a=r[n];t.set(a[0],a[1])}return t}}();var a=function(){try{if(new e.Map(new e.Map))return function createMapFromMap(r){return new e.Map(r)}}catch(r){}return function createMapAndPopulateFromMap(r){var t=new e.Map;r.forEach((function(r,e){t.set(e,r)}));return t}}();var i=function(){return(new e.Map).keys().next?function _clearValues(r){var e=r.keys();var t;while(!(t=e.next()).done)r.set(t.value,null)}:function _clearValuesWithForeEach(r){r.forEach((function(e,t){r.set(t,null)}))}}();var p=function(){try{if((new e.Map).values().next)return function createArrayFromMap(r,e){return e?Array.from(r.values()):Array.from(r.keys())}}catch(r){}return function createArrayFromMapWithForeach(r,e){var t=s.createFixedSize(r.size),n=0;r.forEach((function(r,a){t[n]=e?r:a;n++}));return t}}();var u=function(){function MapWrapper(){}MapWrapper.clone=function(r){return a(r)};MapWrapper.createFromStringMap=function(r){var t=new e.Map;for(var n in r)t.set(n,r[n]);return t};MapWrapper.toStringMap=function(r){var e={};r.forEach((function(r,t){return e[t]=r}));return e};MapWrapper.createFromPairs=function(r){return n(r)};MapWrapper.clearValues=function(r){i(r)};MapWrapper.iterable=function(r){return r};MapWrapper.keys=function(r){return p(r,false)};MapWrapper.values=function(r){return p(r,true)};return MapWrapper}();e.MapWrapper=u;var o=function(){function StringMapWrapper(){}StringMapWrapper.create=function(){return{}};StringMapWrapper.contains=function(r,e){return r.hasOwnProperty(e)};StringMapWrapper.get=function(r,e){return r.hasOwnProperty(e)?r[e]:void 0};StringMapWrapper.set=function(r,e,t){r[e]=t};StringMapWrapper.keys=function(r){return Object.keys(r)};StringMapWrapper.values=function(r){return Object.keys(r).reduce((function(e,t){e.push(r[t]);return e}),[])};StringMapWrapper.isEmpty=function(r){for(var e in r)return false;return true};StringMapWrapper.delete=function(r,e){delete r[e]};StringMapWrapper.forEach=function(r,e){for(var t in r)r.hasOwnProperty(t)&&e(r[t],t)};StringMapWrapper.merge=function(r,e){var t={};for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t};StringMapWrapper.equals=function(r,e){var t=Object.keys(r);var n=Object.keys(e);if(t.length!=n.length)return false;var a;for(var i=0;i<t.length;i++){a=t[i];if(r[a]!==e[a])return false}return true};return StringMapWrapper}();e.StringMapWrapper=o;var s=function(){function ListWrapper(){}ListWrapper.createFixedSize=function(r){return new Array(r)};ListWrapper.createGrowableSize=function(r){return new Array(r)};ListWrapper.clone=function(r){return r.slice(0)};ListWrapper.forEachWithIndex=function(r,e){for(var t=0;t<r.length;t++)e(r[t],t)};ListWrapper.first=function(r){return r?r[0]:null};ListWrapper.last=function(r){return r&&0!=r.length?r[r.length-1]:null};ListWrapper.indexOf=function(r,e,t){void 0===t&&(t=0);return r.indexOf(e,t)};ListWrapper.contains=function(r,e){return-1!==r.indexOf(e)};ListWrapper.reversed=function(r){var e=ListWrapper.clone(r);return e.reverse()};ListWrapper.concat=function(r,e){return r.concat(e)};ListWrapper.insert=function(r,e,t){r.splice(e,0,t)};ListWrapper.removeAt=function(r,e){var t=r[e];r.splice(e,1);return t};ListWrapper.removeAll=function(r,e){for(var t=0;t<e.length;++t){var n=r.indexOf(e[t]);r.splice(n,1)}};ListWrapper.remove=function(r,e){var t=r.indexOf(e);if(t>-1){r.splice(t,1);return true}return false};ListWrapper.clear=function(r){r.length=0};ListWrapper.isEmpty=function(r){return 0==r.length};ListWrapper.fill=function(r,e,t,n){void 0===t&&(t=0);void 0===n&&(n=null);r.fill(e,t,null===n?r.length:n)};ListWrapper.equals=function(r,e){if(r.length!=e.length)return false;for(var t=0;t<r.length;++t)if(r[t]!==e[t])return false;return true};ListWrapper.slice=function(r,e,t){void 0===e&&(e=0);void 0===t&&(t=null);return r.slice(e,null===t?void 0:t)};ListWrapper.splice=function(r,e,t){return r.splice(e,t)};ListWrapper.sort=function(r,e){t.isPresent(e)?r.sort(e):r.sort()};ListWrapper.toString=function(r){return r.toString()};ListWrapper.toJSON=function(r){return JSON.stringify(r)};ListWrapper.maximum=function(r,e){if(0==r.length)return null;var n=null;var a=-Infinity;for(var i=0;i<r.length;i++){var p=r[i];if(!t.isBlank(p)){var u=e(p);if(u>a){n=p;a=u}}}return n};ListWrapper.flatten=function(r){var e=[];_flattenArray(r,e);return e};ListWrapper.addAll=function(r,e){for(var t=0;t<e.length;t++)r.push(e[t])};return ListWrapper}();e.ListWrapper=s;function _flattenArray(r,e){if(t.isPresent(r))for(var n=0;n<r.length;n++){var a=r[n];t.isArray(a)?_flattenArray(a,e):e.push(a)}return e}function isListLikeIterable(r){return!!t.isJsObject(r)&&(t.isArray(r)||!(r instanceof e.Map)&&t.getSymbolIterator()in r)}e.isListLikeIterable=isListLikeIterable;function areIterablesEqual(r,e,n){var a=r[t.getSymbolIterator()]();var i=e[t.getSymbolIterator()]();while(true){var p=a.next();var u=i.next();if(p.done&&u.done)return true;if(p.done||u.done)return false;if(!n(p.value,u.value))return false}}e.areIterablesEqual=areIterablesEqual;function iterateListLike(r,e){if(t.isArray(r))for(var n=0;n<r.length;n++)e(r[n]);else{var a=r[t.getSymbolIterator()]();var i;while(!(i=a.next()).done)e(i.value)}}e.iterateListLike=iterateListLike;var f=function(){var r=new e.Set([1,2,3]);return 3===r.size?function createSetFromList(r){return new e.Set(r)}:function createSetAndPopulateFromList(r){var t=new e.Set(r);if(t.size!==r.length)for(var n=0;n<r.length;n++)t.add(r[n]);return t}}();var c=function(){function SetWrapper(){}SetWrapper.createFromList=function(r){return f(r)};SetWrapper.has=function(r,e){return r.has(e)};SetWrapper.delete=function(r,e){r.delete(e)};return SetWrapper}();e.SetWrapper=c;const l=e.Map,v=e.Set,W=e.MapWrapper,L=e.StringMapWrapper,M=e.ListWrapper,g=e.isListLikeIterable,h=e.areIterablesEqual,S=e.iterateListLike,y=e.SetWrapper;export default e;export{M as ListWrapper,l as Map,W as MapWrapper,v as Set,y as SetWrapper,L as StringMapWrapper,h as areIterablesEqual,g as isListLikeIterable,S as iterateListLike};

