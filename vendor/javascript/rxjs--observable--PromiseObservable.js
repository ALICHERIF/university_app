import r from"../util/root.js";import"../symbol/observable.js";import"../util/isFunction.js";import"../util/isArray.js";import"../util/isObject.js";import"../util/errorObject.js";import"../util/tryCatch.js";import"../util/UnsubscriptionError.js";import"../Subscription.js";import"../symbol/rxSubscriber.js";import"../Observer.js";import"../Subscriber.js";import"../util/toSubscriber.js";import e from"../Observable.js";var s={};var i=s&&s.__extends||function(r,e){for(var s in e)e.hasOwnProperty(s)&&(r[s]=e[s]);function __(){this.constructor=r}r.prototype=null===e?Object.create(e):(__.prototype=e.prototype,new __)};var t=r;var o=e;var u=function(r){i(PromiseObservable,r);function PromiseObservable(e,s){void 0===s&&(s=null);r.call(this);this.promise=e;this.scheduler=s}PromiseObservable.create=function(r,e){void 0===e&&(e=null);return new PromiseObservable(r,e)};PromiseObservable.prototype._subscribe=function(r){var e=this;var s=this.promise;var i=this.scheduler;if(null==i)if(this._isScalar){if(!r.isUnsubscribed){r.next(this.value);r.complete()}}else s.then((function(s){e.value=s;e._isScalar=true;if(!r.isUnsubscribed){r.next(s);r.complete()}}),(function(e){r.isUnsubscribed||r.error(e)})).then(null,(function(r){t.root.setTimeout((function(){throw r}))}));else if(this._isScalar){if(!r.isUnsubscribed)return i.schedule(dispatchNext,0,{value:this.value,subscriber:r})}else s.then((function(s){e.value=s;e._isScalar=true;r.isUnsubscribed||r.add(i.schedule(dispatchNext,0,{value:s,subscriber:r}))}),(function(e){r.isUnsubscribed||r.add(i.schedule(dispatchError,0,{err:e,subscriber:r}))})).then(null,(function(r){t.root.setTimeout((function(){throw r}))}))};return PromiseObservable}(o.Observable);s.PromiseObservable=u;function dispatchNext(r){var e=r.value,s=r.subscriber;if(!s.isUnsubscribed){s.next(e);s.complete()}}function dispatchError(r){var e=r.err,s=r.subscriber;s.isUnsubscribed||s.error(e)}const n=s.PromiseObservable;export default s;export{n as PromiseObservable};

